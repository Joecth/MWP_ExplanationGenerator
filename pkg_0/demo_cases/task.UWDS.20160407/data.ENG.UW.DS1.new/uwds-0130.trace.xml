<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>34.72USD</CHUNK>
          <CHUNK>OP_Addition</CHUNK>
            <CHUNK>25.41USD</CHUNK>
              <CHUNK>OP_Addition</CHUNK>
                <CHUNK>11.08USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>14.33USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>9.31USD</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_192'>
    34.72USD
    Addition
    <math ID='ctx_185'>
      25.41USD
      Addition
      <math ID='NULL'>
        11.08USD
      </math>
      <math ID='NULL'>
        14.33USD
      </math>
    </math>
    <math ID='NULL'>
      9.31USD
    </math>
  </math>
  <ctx ID='ctx_194'>
    <__one_line_xml_ASK__ANS>34.72</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_193'>
      ( CLUE::Input ( ASK ANS ( tvq v1 # s2w12 t2 ) ) )
    </ctx>
    <ctx ID='ctx_196'>
      ( CLUE::AtomSeq ( tvq v1 # s2w3 t2 ) )
      ( CLUE::Util ( Get ( m_real 34.72 ) ) )
      ( CLUE::Util ( Val ( m_real 34.72 ) ( m_fact ( tvq v1 # s2w3 t2 ) ( 34.72 ) ) ) )
      <ctx ID='ctx_192'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t2 ) ( + ( tvq v1 # s2w3 t1 ) ( quan q6 # s2w3 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t2 ) ( + 25.41 9.31 ) ) )
        ( CLUE::Create-Fact ( tvq v1 # s2w3 t2 ) ( 34.72 ) )
        <ctx ID='ctx_191'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 # ) ( ?_3 s2w3 ) ( ?_4 v1 ) ( ?_5 t1 ) ( ?_6 t2 ) )
          ( CLUE::Premise ( quan q6 # s2w3 ) ( tvq_op v1 + q6 t1 t2 ) )
          ( CLUE::Conclusion ( = ( tvq v1 # s2w3 t2 ) ( + ( tvq v1 # s2w3 t1 ) ( quan q6 # s2w3 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 25.41 ) ( $3_quan 9.31 ) )
          <ctx ID='ctx_138'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s2w3 ) 9.31 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s2w3 ) 9.31 ) )
            ( CLUE::Create-Fact ( quan q6 # s2w3 ) ( 9.31 ) )
            <ctx ID='ctx_137'>
              ( CLUE::Input ( = ( quan q6 # s2w12 ) 9.31 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_190'>
            ( CLUE::Create-Fact ( tvq_op v1 + q6 t1 t2 ) ( ) )
            <ctx ID='ctx_188'>
              ( CLUE::Input ( tvq_op v1 + q6 t1 t2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_185'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t1 ) ( + ( tvq v1 # s2w3 t0 ) ( quan q4 # s2w3 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t1 ) ( + 11.08 14.33 ) ) )
          ( CLUE::Create-Fact ( tvq v1 # s2w3 t1 ) ( 25.41 ) )
          <ctx ID='ctx_184'>
            ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
            ( CLUE::Bind ( ?_1 q4 ) ( ?_2 # ) ( ?_3 s2w3 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
            ( CLUE::Premise ( quan q4 # s2w3 ) ( tvq_op v1 + q4 t0 t1 ) )
            ( CLUE::Conclusion ( = ( tvq v1 # s2w3 t1 ) ( + ( tvq v1 # s2w3 t0 ) ( quan q4 # s2w3 ) ) ) )
            ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 11.08 ) ( $3_quan 14.33 ) )
            <ctx ID='ctx_130'>
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s2w3 ) 14.33 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s2w3 ) 14.33 ) )
              ( CLUE::Create-Fact ( quan q4 # s2w3 ) ( 14.33 ) )
              <ctx ID='ctx_129'>
                ( CLUE::Input ( = ( quan q4 # s2w7 ) 14.33 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_183'>
              ( CLUE::Create-Fact ( tvq_op v1 + q4 t0 t1 ) ( ) )
              <ctx ID='ctx_181'>
                ( CLUE::Input ( tvq_op v1 + q4 t0 t1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_178'>
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t0 ) ( quan q2 # s2w3 ) ) )
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s2w3 t0 ) 11.08 ) )
            ( CLUE::Create-Fact ( tvq v1 # s2w3 t0 ) ( 11.08 ) )
            <ctx ID='ctx_177'>
              ( CLUE::Input ( = ( tvq v1 # s2w3 t0 ) ( quan q2 # s2w3 ) ) )
            </ctx>
            <ctx ID='ctx_122'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w3 ) 11.08 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w3 ) 11.08 ) )
              ( CLUE::Create-Fact ( quan q2 # s2w3 ) ( 11.08 ) )
              <ctx ID='ctx_121'>
                ( CLUE::Input ( = ( quan q2 # s2w3 ) 11.08 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_130'>
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s2w3 ) 14.33 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s2w3 ) 14.33 ) )
            ( CLUE::Create-Fact ( quan q4 # s2w3 ) ( 14.33 ) )
            <ctx ID='ctx_129'>
              ( CLUE::Input ( = ( quan q4 # s2w7 ) 14.33 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_138'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s2w3 ) 9.31 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s2w3 ) 9.31 ) )
          ( CLUE::Create-Fact ( quan q6 # s2w3 ) ( 9.31 ) )
          <ctx ID='ctx_137'>
            ( CLUE::Input ( = ( quan q6 # s2w12 ) 9.31 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
