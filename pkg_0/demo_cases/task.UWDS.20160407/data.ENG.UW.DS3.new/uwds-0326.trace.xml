<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>24.81USD</CHUNK>
          <CHUNK>OP_Addition</CHUNK>
            <CHUNK>12.3USD</CHUNK>
              <CHUNK>OP_Addition</CHUNK>
                <CHUNK>6.51USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>5.79USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>12.51USD</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_236'>
    24.81USD
    Addition
    <math ID='ctx_229'>
      12.3USD
      Addition
      <math ID='NULL'>
        6.51USD
      </math>
      <math ID='NULL'>
        5.79USD
      </math>
    </math>
    <math ID='NULL'>
      12.51USD
    </math>
  </math>
  <ctx ID='ctx_238'>
    <__one_line_xml_ASK__ANS>24.81</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_237'>
      ( CLUE::Input ( ASK ANS ( tvq v1 # s1w3 t2 ) ) )
    </ctx>
    <ctx ID='ctx_240'>
      ( CLUE::AtomSeq ( tvq v1 # s1w3 t2 ) )
      ( CLUE::Util ( Get ( m_real 24.81 ) ) )
      ( CLUE::Util ( Val ( m_real 24.81 ) ( m_fact ( tvq v1 # s1w3 t2 ) ( 24.81 ) ) ) )
      <ctx ID='ctx_236'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t2 ) ( + ( tvq v1 # s1w3 t1 ) ( quan q6 # s1w3 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t2 ) ( + 12.3 12.51 ) ) )
        ( CLUE::Create-Fact ( tvq v1 # s1w3 t2 ) ( 24.81 ) )
        <ctx ID='ctx_235'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 # ) ( ?_3 s1w3 ) ( ?_4 v1 ) ( ?_5 t1 ) ( ?_6 t2 ) )
          ( CLUE::Premise ( quan q6 # s1w3 ) ( tvq_op v1 + q6 t1 t2 ) )
          ( CLUE::Conclusion ( = ( tvq v1 # s1w3 t2 ) ( + ( tvq v1 # s1w3 t1 ) ( quan q6 # s1w3 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 12.3 ) ( $3_quan 12.51 ) )
          <ctx ID='ctx_143'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
            ( CLUE::Create-Fact ( quan q6 # s1w3 ) ( 12.51 ) )
            <ctx ID='ctx_142'>
              ( CLUE::Input ( = ( quan q6 # s1w19 ) 12.51 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_234'>
            ( CLUE::Create-Fact ( tvq_op v1 + q6 t1 t2 ) ( ) )
            <ctx ID='ctx_232'>
              ( CLUE::Input ( tvq_op v1 + q6 t1 t2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_229'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t1 ) ( + ( tvq v1 # s1w3 t0 ) ( quan q4 # s1w3 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t1 ) ( + 6.51 5.79 ) ) )
          ( CLUE::Create-Fact ( tvq v1 # s1w3 t1 ) ( 12.3 ) )
          <ctx ID='ctx_228'>
            ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
            ( CLUE::Bind ( ?_1 q4 ) ( ?_2 # ) ( ?_3 s1w3 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
            ( CLUE::Premise ( quan q4 # s1w3 ) ( tvq_op v1 + q4 t0 t1 ) )
            ( CLUE::Conclusion ( = ( tvq v1 # s1w3 t1 ) ( + ( tvq v1 # s1w3 t0 ) ( quan q4 # s1w3 ) ) ) )
            ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 6.51 ) ( $3_quan 5.79 ) )
            <ctx ID='ctx_135'>
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 5.79 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 5.79 ) )
              ( CLUE::Create-Fact ( quan q4 # s1w3 ) ( 5.79 ) )
              <ctx ID='ctx_134'>
                ( CLUE::Input ( = ( quan q4 # s1w9 ) 5.79 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_227'>
              ( CLUE::Create-Fact ( tvq_op v1 + q4 t0 t1 ) ( ) )
              <ctx ID='ctx_225'>
                ( CLUE::Input ( tvq_op v1 + q4 t0 t1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_222'>
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t0 ) ( quan q2 # s1w3 ) ) )
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t0 ) 6.51 ) )
            ( CLUE::Create-Fact ( tvq v1 # s1w3 t0 ) ( 6.51 ) )
            <ctx ID='ctx_221'>
              ( CLUE::Input ( = ( tvq v1 # s1w3 t0 ) ( quan q2 # s1w3 ) ) )
            </ctx>
            <ctx ID='ctx_127'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w3 ) 6.51 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w3 ) 6.51 ) )
              ( CLUE::Create-Fact ( quan q2 # s1w3 ) ( 6.51 ) )
              <ctx ID='ctx_126'>
                ( CLUE::Input ( = ( quan q2 # s1w3 ) 6.51 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_135'>
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 5.79 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 5.79 ) )
            ( CLUE::Create-Fact ( quan q4 # s1w3 ) ( 5.79 ) )
            <ctx ID='ctx_134'>
              ( CLUE::Input ( = ( quan q4 # s1w9 ) 5.79 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_143'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
          ( CLUE::Create-Fact ( quan q6 # s1w3 ) ( 12.51 ) )
          <ctx ID='ctx_142'>
            ( CLUE::Input ( = ( quan q6 # s1w19 ) 12.51 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
