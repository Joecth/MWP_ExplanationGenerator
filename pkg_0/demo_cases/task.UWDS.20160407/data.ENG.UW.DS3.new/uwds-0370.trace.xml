<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>117eraser</CHUNK>
          <CHUNK>OP_Addition</CHUNK>
            <CHUNK>78eraser</CHUNK>
              <CHUNK>OP_Addition</CHUNK>
                <CHUNK>48eraser</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>30eraser</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>39eraser</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_208'>
    117eraser
    Addition
    <math ID='ctx_201'>
      78eraser
      Addition
      <math ID='NULL'>
        48eraser
      </math>
      <math ID='NULL'>
        30eraser
      </math>
    </math>
    <math ID='NULL'>
      39eraser
    </math>
  </math>
  <ctx ID='ctx_210'>
    <__one_line_xml_ASK__ANS>117</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_209'>
      ( CLUE::Input ( ASK ANS ( tvq v1 # s3w3 t2 ) ) )
    </ctx>
    <ctx ID='ctx_212'>
      ( CLUE::AtomSeq ( tvq v1 # s1w4 t2 ) )
      ( CLUE::Util ( Get ( m_real 117 ) ) )
      ( CLUE::Util ( Val ( m_real 117 ) ( m_fact ( tvq v1 # s1w4 t2 ) ( 117 ) ) ) )
      <ctx ID='ctx_208'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t2 ) ( + ( tvq v1 # s1w4 t1 ) ( quan q6 # s1w4 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t2 ) ( + 78 39 ) ) )
        ( CLUE::Create-Fact ( tvq v1 # s1w4 t2 ) ( 117 ) )
        <ctx ID='ctx_207'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 # ) ( ?_3 s1w4 ) ( ?_4 v1 ) ( ?_5 t1 ) ( ?_6 t2 ) )
          ( CLUE::Premise ( quan q6 # s1w4 ) ( tvq_op v1 + q6 t1 t2 ) )
          ( CLUE::Conclusion ( = ( tvq v1 # s1w4 t2 ) ( + ( tvq v1 # s1w4 t1 ) ( quan q6 # s1w4 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 78 ) ( $3_quan 39 ) )
          <ctx ID='ctx_149'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 39 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 39 ) )
            ( CLUE::Create-Fact ( quan q6 # s1w4 ) ( 39 ) )
            <ctx ID='ctx_148'>
              ( CLUE::Input ( = ( quan q6 # s2w4 ) 39 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_206'>
            ( CLUE::Create-Fact ( tvq_op v1 + q6 t1 t2 ) ( ) )
            <ctx ID='ctx_204'>
              ( CLUE::Input ( tvq_op v1 + q6 t1 t2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_201'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t1 ) ( + ( tvq v1 # s1w4 t0 ) ( quan q4 # s1w4 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t1 ) ( + 48 30 ) ) )
          ( CLUE::Create-Fact ( tvq v1 # s1w4 t1 ) ( 78 ) )
          <ctx ID='ctx_200'>
            ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
            ( CLUE::Bind ( ?_1 q4 ) ( ?_2 # ) ( ?_3 s1w4 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
            ( CLUE::Premise ( quan q4 # s1w4 ) ( tvq_op v1 + q4 t0 t1 ) )
            ( CLUE::Conclusion ( = ( tvq v1 # s1w4 t1 ) ( + ( tvq v1 # s1w4 t0 ) ( quan q4 # s1w4 ) ) ) )
            ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 48 ) ( $3_quan 30 ) )
            <ctx ID='ctx_102'>
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w4 ) 30 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w4 ) 30 ) )
              ( CLUE::Create-Fact ( quan q4 # s1w4 ) ( 30 ) )
              <ctx ID='ctx_101'>
                ( CLUE::Input ( = ( quan q4 # s1w10 ) 30 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_199'>
              ( CLUE::Create-Fact ( tvq_op v1 + q4 t0 t1 ) ( ) )
              <ctx ID='ctx_197'>
                ( CLUE::Input ( tvq_op v1 + q4 t0 t1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_194'>
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t0 ) ( quan q2 # s1w4 ) ) )
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t0 ) 48 ) )
            ( CLUE::Create-Fact ( tvq v1 # s1w4 t0 ) ( 48 ) )
            <ctx ID='ctx_193'>
              ( CLUE::Input ( = ( tvq v1 # s1w4 t0 ) ( quan q2 # s1w4 ) ) )
            </ctx>
            <ctx ID='ctx_94'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w4 ) 48 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w4 ) 48 ) )
              ( CLUE::Create-Fact ( quan q2 # s1w4 ) ( 48 ) )
              <ctx ID='ctx_93'>
                ( CLUE::Input ( = ( quan q2 # s1w4 ) 48 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_102'>
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w4 ) 30 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w4 ) 30 ) )
            ( CLUE::Create-Fact ( quan q4 # s1w4 ) ( 30 ) )
            <ctx ID='ctx_101'>
              ( CLUE::Input ( = ( quan q4 # s1w10 ) 30 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_149'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 39 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 39 ) )
          ( CLUE::Create-Fact ( quan q6 # s1w4 ) ( 39 ) )
          <ctx ID='ctx_148'>
            ( CLUE::Input ( = ( quan q6 # s2w4 ) 39 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
