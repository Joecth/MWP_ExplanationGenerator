<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>42.33USD</CHUNK>
          <CHUNK>OP_Addition</CHUNK>
            <CHUNK>29.82USD</CHUNK>
              <CHUNK>OP_Addition</CHUNK>
                <CHUNK>15USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>14.82USD</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>12.51USD</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_221'>
    42.33USD
    Addition
    <math ID='ctx_214'>
      29.82USD
      Addition
      <math ID='NULL'>
        15USD
      </math>
      <math ID='NULL'>
        14.82USD
      </math>
    </math>
    <math ID='NULL'>
      12.51USD
    </math>
  </math>
  <ctx ID='ctx_223'>
    <__one_line_xml_ASK__ANS>42.33</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_222'>
      ( CLUE::Input ( ASK ANS ( tvq v1 # s1w14 t2 ) ) )
    </ctx>
    <ctx ID='ctx_225'>
      ( CLUE::AtomSeq ( tvq v1 # s1w3 t2 ) )
      ( CLUE::Util ( Get ( m_real 42.33 ) ) )
      ( CLUE::Util ( Val ( m_real 42.33 ) ( m_fact ( tvq v1 # s1w3 t2 ) ( 42.33 ) ) ) )
      <ctx ID='ctx_221'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t2 ) ( + ( tvq v1 # s1w3 t1 ) ( quan q6 # s1w3 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t2 ) ( + 29.82 12.51 ) ) )
        ( CLUE::Create-Fact ( tvq v1 # s1w3 t2 ) ( 42.33 ) )
        <ctx ID='ctx_220'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 # ) ( ?_3 s1w3 ) ( ?_4 v1 ) ( ?_5 t1 ) ( ?_6 t2 ) )
          ( CLUE::Premise ( quan q6 # s1w3 ) ( tvq_op v1 + q6 t1 t2 ) )
          ( CLUE::Conclusion ( = ( tvq v1 # s1w3 t2 ) ( + ( tvq v1 # s1w3 t1 ) ( quan q6 # s1w3 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 29.82 ) ( $3_quan 12.51 ) )
          <ctx ID='ctx_130'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
            ( CLUE::Create-Fact ( quan q6 # s1w3 ) ( 12.51 ) )
            <ctx ID='ctx_129'>
              ( CLUE::Input ( = ( quan q6 # s1w14 ) 12.51 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_219'>
            ( CLUE::Create-Fact ( tvq_op v1 + q6 t1 t2 ) ( ) )
            <ctx ID='ctx_217'>
              ( CLUE::Input ( tvq_op v1 + q6 t1 t2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_214'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t1 ) ( + ( tvq v1 # s1w3 t0 ) ( quan q4 # s1w3 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t1 ) ( + 15 14.82 ) ) )
          ( CLUE::Create-Fact ( tvq v1 # s1w3 t1 ) ( 29.82 ) )
          <ctx ID='ctx_213'>
            ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
            ( CLUE::Bind ( ?_1 q4 ) ( ?_2 # ) ( ?_3 s1w3 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
            ( CLUE::Premise ( quan q4 # s1w3 ) ( tvq_op v1 + q4 t0 t1 ) )
            ( CLUE::Conclusion ( = ( tvq v1 # s1w3 t1 ) ( + ( tvq v1 # s1w3 t0 ) ( quan q4 # s1w3 ) ) ) )
            ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 15 ) ( $3_quan 14.82 ) )
            <ctx ID='ctx_122'>
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 14.82 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 14.82 ) )
              ( CLUE::Create-Fact ( quan q4 # s1w3 ) ( 14.82 ) )
              <ctx ID='ctx_121'>
                ( CLUE::Input ( = ( quan q4 # s1w8 ) 14.82 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_212'>
              ( CLUE::Create-Fact ( tvq_op v1 + q4 t0 t1 ) ( ) )
              <ctx ID='ctx_210'>
                ( CLUE::Input ( tvq_op v1 + q4 t0 t1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_207'>
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t0 ) ( quan q2 # s1w3 ) ) )
            ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w3 t0 ) 15 ) )
            ( CLUE::Create-Fact ( tvq v1 # s1w3 t0 ) ( 15 ) )
            <ctx ID='ctx_206'>
              ( CLUE::Input ( = ( tvq v1 # s1w3 t0 ) ( quan q2 # s1w3 ) ) )
            </ctx>
            <ctx ID='ctx_114'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w3 ) 15 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w3 ) 15 ) )
              ( CLUE::Create-Fact ( quan q2 # s1w3 ) ( 15 ) )
              <ctx ID='ctx_113'>
                ( CLUE::Input ( = ( quan q2 # s1w3 ) 15 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_122'>
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 14.82 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q4 # s1w3 ) 14.82 ) )
            ( CLUE::Create-Fact ( quan q4 # s1w3 ) ( 14.82 ) )
            <ctx ID='ctx_121'>
              ( CLUE::Input ( = ( quan q4 # s1w8 ) 14.82 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_130'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w3 ) 12.51 ) )
          ( CLUE::Create-Fact ( quan q6 # s1w3 ) ( 12.51 ) )
          <ctx ID='ctx_129'>
            ( CLUE::Input ( = ( quan q6 # s1w14 ) 12.51 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
