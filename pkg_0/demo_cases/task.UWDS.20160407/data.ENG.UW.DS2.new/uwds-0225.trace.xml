<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>0.8milehouse</CHUNK>
          <CHUNK>OP_Addition</CHUNK>
            <CHUNK>0.4milehouse</CHUNK>
              <CHUNK>OP_Addition</CHUNK>
                <CHUNK>0.3milehouse</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>0.1milehouse</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>0.4milehouse</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_294'>
    0.8milehouse
    Addition
    <math ID='ctx_287'>
      0.4milehouse
      Addition
      <math ID='NULL'>
        0.3milehouse
      </math>
      <math ID='NULL'>
        0.1milehouse
      </math>
    </math>
    <math ID='NULL'>
      0.4milehouse
    </math>
  </math>
  <ctx ID='ctx_296'>
    <__one_line_xml_ASK__ANS>0.8</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_295'>
      ( CLUE::Input ( ASK ANS ( tvq v1 s4w3 s2w8 t2 ) ) )
    </ctx>
    <ctx ID='ctx_298'>
      ( CLUE::AtomSeq ( tvq v1 mile s2w8 t2 ) )
      ( CLUE::Util ( Get ( m_real 0.8 ) ) )
      ( CLUE::Util ( Val ( m_real 0.8 ) ( m_fact ( tvq v1 mile s2w8 t2 ) ( 0.8 ) ) ) )
      <ctx ID='ctx_294'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t2 ) ( + ( tvq v1 mile s2w8 t1 ) ( quan q6 mile s2w8 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t2 ) ( + 0.4 0.4 ) ) )
        ( CLUE::Create-Fact ( tvq v1 mile s2w8 t2 ) ( 0.8 ) )
        <ctx ID='ctx_293'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 mile ) ( ?_3 s2w8 ) ( ?_4 v1 ) ( ?_5 t1 ) ( ?_6 t2 ) )
          ( CLUE::Premise ( quan q6 mile s2w8 ) ( tvq_op v1 + q6 t1 t2 ) )
          ( CLUE::Conclusion ( = ( tvq v1 mile s2w8 t2 ) ( + ( tvq v1 mile s2w8 t1 ) ( quan q6 mile s2w8 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 0.4 ) ( $3_quan 0.4 ) )
          <ctx ID='ctx_232'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 mile s2w8 ) 0.4 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 mile s2w8 ) 0.4 ) )
            ( CLUE::Create-Fact ( quan q6 mile s2w8 ) ( 0.4 ) )
            <ctx ID='ctx_231'>
              ( CLUE::Input ( = ( quan q6 s3w5 s2w8 ) 0.4 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_292'>
            ( CLUE::Create-Fact ( tvq_op v1 + q6 t1 t2 ) ( ) )
            <ctx ID='ctx_290'>
              ( CLUE::Input ( tvq_op v1 + q6 t1 t2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_287'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t1 ) ( + ( tvq v1 mile s2w8 t0 ) ( quan q4 mile s2w8 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t1 ) ( + 0.3 0.1 ) ) )
          ( CLUE::Create-Fact ( tvq v1 mile s2w8 t1 ) ( 0.4 ) )
          <ctx ID='ctx_286'>
            ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 + ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( + ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
            ( CLUE::Bind ( ?_1 q4 ) ( ?_2 mile ) ( ?_3 s2w8 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
            ( CLUE::Premise ( quan q4 mile s2w8 ) ( tvq_op v1 + q4 t0 t1 ) )
            ( CLUE::Conclusion ( = ( tvq v1 mile s2w8 t1 ) ( + ( tvq v1 mile s2w8 t0 ) ( quan q4 mile s2w8 ) ) ) )
            ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 0.3 ) ( $3_quan 0.1 ) )
            <ctx ID='ctx_174'>
              ( CLUE::EVAL::LF2 ( = ( quan q4 mile s2w8 ) 0.1 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q4 mile s2w8 ) 0.1 ) )
              ( CLUE::Create-Fact ( quan q4 mile s2w8 ) ( 0.1 ) )
              <ctx ID='ctx_173'>
                ( CLUE::Input ( = ( quan q4 s2w14 s2w8 ) 0.1 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_285'>
              ( CLUE::Create-Fact ( tvq_op v1 + q4 t0 t1 ) ( ) )
              <ctx ID='ctx_283'>
                ( CLUE::Input ( tvq_op v1 + q4 t0 t1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_280'>
            ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t0 ) ( quan q2 mile s2w8 ) ) )
            ( CLUE::EVAL::LF2 ( = ( tvq v1 mile s2w8 t0 ) 0.3 ) )
            ( CLUE::Create-Fact ( tvq v1 mile s2w8 t0 ) ( 0.3 ) )
            <ctx ID='ctx_279'>
              ( CLUE::Input ( = ( tvq v1 s2w5 s2w8 t0 ) ( quan q2 s2w5 s2w8 ) ) )
            </ctx>
            <ctx ID='ctx_166'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 mile s2w8 ) 0.3 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 mile s2w8 ) 0.3 ) )
              ( CLUE::Create-Fact ( quan q2 mile s2w8 ) ( 0.3 ) )
              <ctx ID='ctx_165'>
                ( CLUE::Input ( = ( quan q2 s2w5 s2w8 ) 0.3 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_174'>
            ( CLUE::EVAL::LF2 ( = ( quan q4 mile s2w8 ) 0.1 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q4 mile s2w8 ) 0.1 ) )
            ( CLUE::Create-Fact ( quan q4 mile s2w8 ) ( 0.1 ) )
            <ctx ID='ctx_173'>
              ( CLUE::Input ( = ( quan q4 s2w14 s2w8 ) 0.1 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_232'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 mile s2w8 ) 0.4 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 mile s2w8 ) 0.4 ) )
          ( CLUE::Create-Fact ( quan q6 mile s2w8 ) ( 0.4 ) )
          <ctx ID='ctx_231'>
            ( CLUE::Input ( = ( quan q6 s3w5 s2w8 ) 0.4 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
