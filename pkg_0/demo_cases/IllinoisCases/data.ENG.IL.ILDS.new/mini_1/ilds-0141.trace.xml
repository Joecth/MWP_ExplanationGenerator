<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>V.buy</CHUNK>
      <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>25</CHUNK>
          <CHUNK>OP_Multiplication</CHUNK>
            <CHUNK>5time</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>5(cap/time)</CHUNK>
              <CHUNK>OP_CommonDiv</CHUNK>
                <CHUNK>5cap</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>1time</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_201'>
    25
    Multiplication
    <math ID='NULL'>
      5time
    </math>
    <math ID='ctx_158'>
      5(cap/time)
      CommonDiv
      <math ID='NULL'>
        5cap
      </math>
      <math ID='NULL'>
        1time
      </math>
    </math>
  </math>
  <ctx ID='ctx_198'>
    <__one_line_xml_ASK__ANS>25</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_197'>
      ( CLUE::Input ( ASK ANS ( Multiplication ( quan q1 # s1w7 ) ( Get ( u_map ?m # s1w7 # s2w5 ) ( COND ( verb ?m s2w2 ) ) ) ) ) )
    </ctx>
    <ctx ID='ctx_201'>
      ( CLUE::Util ( Multiplication 5 5 = 25 ) )
      ( CLUE::Util ( Val1 ( m_real 5 ) ( m_fact ( quan q1 # s1w7 ) ( 5 ) ) ) )
      ( CLUE::Util ( Val2 ( m_real 5 ) ( m_fact ( u_map m1 # s1w7 # s2w5 ) ( 5 ) ) ) )
      <ctx ID='ctx_82'>
        ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w7 ) 5 ) )
        ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w7 ) 5 ) )
        ( CLUE::Create-Fact ( quan q1 # s1w7 ) ( 5 ) )
        <ctx ID='ctx_81'>
          ( CLUE::Input ( = ( quan q1 # s1w7 ) 5 ) )
        </ctx>
      </ctx>
      <ctx ID='ctx_200'>
        ( CLUE::Bound-Facts ( u_map m1 # s1w7 # s2w5 ) ( verb m1 s2w2 ) )
        <ctx ID='ctx_158'>
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s2w5 ) ( / ( quan q2 # s2w5 ) ( quan q3 # s1w7 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s2w5 ) ( / 5 1 ) ) )
          ( CLUE::Create-Fact ( u_map m1 # s1w7 # s2w5 ) ( 5 ) )
          <ctx ID='ctx_157'>
            ( CLUE::Rule ( => ( and ( q_map ?_1 ?_2 ?_3 ) ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ( = ( u_map ?_1 ?_6 ?_7 ?_4 ?_5 ) ( / ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ) ) )
            ( CLUE::Bind ( ?_1 m1 ) ( ?_2 q2 ) ( ?_3 q3 ) ( ?_4 # ) ( ?_5 s2w5 ) ( ?_6 # ) ( ?_7 s1w7 ) )
            ( CLUE::Premise ( q_map m1 q2 q3 ) ( quan q2 # s2w5 ) ( quan q3 # s1w7 ) )
            ( CLUE::Conclusion ( = ( u_map m1 # s1w7 # s2w5 ) ( / ( quan q2 # s2w5 ) ( quan q3 # s1w7 ) ) ) )
            ( CLUE::ExprVarMap ( $1_u_map ) ( $2_quan 5 ) ( $3_quan 1 ) )
            <ctx ID='ctx_154'>
              ( CLUE::Create-Fact ( q_map m1 q2 q3 ) ( ) )
              <ctx ID='ctx_152'>
                ( CLUE::Input ( q_map m1 q2 q3 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_137'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w5 ) 5 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w5 ) 5 ) )
              ( CLUE::Create-Fact ( quan q2 # s2w5 ) ( 5 ) )
              <ctx ID='ctx_136'>
                ( CLUE::Input ( = ( quan q2 # s2w5 ) 5 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_145'>
              ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
              ( CLUE::Create-Fact ( quan q3 # s1w7 ) ( 1 ) )
              <ctx ID='ctx_144'>
                ( CLUE::Input ( = ( quan q3 # s2w7 ) 1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_137'>
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w5 ) 5 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w5 ) 5 ) )
            ( CLUE::Create-Fact ( quan q2 # s2w5 ) ( 5 ) )
            <ctx ID='ctx_136'>
              ( CLUE::Input ( = ( quan q2 # s2w5 ) 5 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_145'>
            ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
            ( CLUE::Create-Fact ( quan q3 # s1w7 ) ( 1 ) )
            <ctx ID='ctx_144'>
              ( CLUE::Input ( = ( quan q3 # s2w7 ) 1 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_161'>
          ( CLUE::Create-Fact ( verb m1 s2w2 ) ( ) )
          <ctx ID='ctx_159'>
            ( CLUE::Input ( verb m1 s2w2 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
