<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>V.buy</CHUNK>
      <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>20</CHUNK>
          <CHUNK>OP_Multiplication</CHUNK>
            <CHUNK>2time</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>10(banana/time)</CHUNK>
              <CHUNK>OP_CommonDiv</CHUNK>
                <CHUNK>10banana</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>1time</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_190'>
    20
    Multiplication
    <math ID='NULL'>
      2time
    </math>
    <math ID='ctx_152'>
      10(banana/time)
      CommonDiv
      <math ID='NULL'>
        10banana
      </math>
      <math ID='NULL'>
        1time
      </math>
    </math>
  </math>
  <ctx ID='ctx_187'>
    <__one_line_xml_ASK__ANS>20</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_186'>
      ( CLUE::Input ( ASK ANS ( Multiplication ( quan q1 # s1w7 ) ( Get ( u_map ?m # s1w7 # s2w4 ) ( COND ( verb ?m s2w2 ) ) ) ) ) )
    </ctx>
    <ctx ID='ctx_190'>
      ( CLUE::Util ( Multiplication 2 10 = 20 ) )
      ( CLUE::Util ( Val1 ( m_real 2 ) ( m_fact ( quan q1 # s1w7 ) ( 2 ) ) ) )
      ( CLUE::Util ( Val2 ( m_real 10 ) ( m_fact ( u_map m1 # s1w7 # s2w4 ) ( 10 ) ) ) )
      <ctx ID='ctx_82'>
        ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w7 ) 2 ) )
        ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w7 ) 2 ) )
        ( CLUE::Create-Fact ( quan q1 # s1w7 ) ( 2 ) )
        <ctx ID='ctx_81'>
          ( CLUE::Input ( = ( quan q1 # s1w7 ) 2 ) )
        </ctx>
      </ctx>
      <ctx ID='ctx_189'>
        ( CLUE::Bound-Facts ( u_map m1 # s1w7 # s2w4 ) ( verb m1 s2w2 ) )
        <ctx ID='ctx_152'>
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s2w4 ) ( / ( quan q2 # s2w4 ) ( quan q3 # s1w7 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s2w4 ) ( / 10 1 ) ) )
          ( CLUE::Create-Fact ( u_map m1 # s1w7 # s2w4 ) ( 10 ) )
          <ctx ID='ctx_151'>
            ( CLUE::Rule ( => ( and ( q_map ?_1 ?_2 ?_3 ) ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ( = ( u_map ?_1 ?_6 ?_7 ?_4 ?_5 ) ( / ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ) ) )
            ( CLUE::Bind ( ?_1 m1 ) ( ?_2 q2 ) ( ?_3 q3 ) ( ?_4 # ) ( ?_5 s2w4 ) ( ?_6 # ) ( ?_7 s1w7 ) )
            ( CLUE::Premise ( q_map m1 q2 q3 ) ( quan q2 # s2w4 ) ( quan q3 # s1w7 ) )
            ( CLUE::Conclusion ( = ( u_map m1 # s1w7 # s2w4 ) ( / ( quan q2 # s2w4 ) ( quan q3 # s1w7 ) ) ) )
            ( CLUE::ExprVarMap ( $1_u_map ) ( $2_quan 10 ) ( $3_quan 1 ) )
            <ctx ID='ctx_148'>
              ( CLUE::Create-Fact ( q_map m1 q2 q3 ) ( ) )
              <ctx ID='ctx_146'>
                ( CLUE::Input ( q_map m1 q2 q3 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_131'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w4 ) 10 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w4 ) 10 ) )
              ( CLUE::Create-Fact ( quan q2 # s2w4 ) ( 10 ) )
              <ctx ID='ctx_130'>
                ( CLUE::Input ( = ( quan q2 # s2w4 ) 10 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_139'>
              ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
              ( CLUE::Create-Fact ( quan q3 # s1w7 ) ( 1 ) )
              <ctx ID='ctx_138'>
                ( CLUE::Input ( = ( quan q3 # s2w6 ) 1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_131'>
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w4 ) 10 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s2w4 ) 10 ) )
            ( CLUE::Create-Fact ( quan q2 # s2w4 ) ( 10 ) )
            <ctx ID='ctx_130'>
              ( CLUE::Input ( = ( quan q2 # s2w4 ) 10 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_139'>
            ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 1 ) )
            ( CLUE::Create-Fact ( quan q3 # s1w7 ) ( 1 ) )
            <ctx ID='ctx_138'>
              ( CLUE::Input ( = ( quan q3 # s2w6 ) 1 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_155'>
          ( CLUE::Create-Fact ( verb m1 s2w2 ) ( ) )
          <ctx ID='ctx_153'>
            ( CLUE::Input ( verb m1 s2w2 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
