<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>V.walk</CHUNK>
      <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>16</CHUNK>
          <CHUNK>OP_Multiplication</CHUNK>
            <CHUNK>8hour</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>2(mile/hour)</CHUNK>
              <CHUNK>OP_CommonDiv</CHUNK>
                <CHUNK>2mile</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
                <CHUNK>1hour</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              <CHUNK>UPSCOPE</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          <CHUNK>UPSCOPE</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_187'>
    16
    Multiplication
    <math ID='NULL'>
      8hour
    </math>
    <math ID='ctx_109'>
      2(mile/hour)
      CommonDiv
      <math ID='NULL'>
        2mile
      </math>
      <math ID='NULL'>
        1hour
      </math>
    </math>
  </math>
  <ctx ID='ctx_184'>
    <__one_line_xml_ASK__ANS>16</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_183'>
      ( CLUE::Input ( ASK ANS ( Multiplication ( quan q3 # s2w9 ) ( Get ( u_map ?m # s2w9 # s1w4 ) ( COND ( verb ?m s1w2 ) ) ) ) ) )
    </ctx>
    <ctx ID='ctx_187'>
      ( CLUE::Util ( Multiplication 8 2 = 16 ) )
      ( CLUE::Util ( Val1 ( m_real 8 ) ( m_fact ( quan q3 # s1w7 ) ( 8 ) ) ) )
      ( CLUE::Util ( Val2 ( m_real 2 ) ( m_fact ( u_map m1 # s1w7 # s1w4 ) ( 2 ) ) ) )
      <ctx ID='ctx_176'>
        ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 8 ) )
        ( CLUE::EVAL::LF2 ( = ( quan q3 # s1w7 ) 8 ) )
        ( CLUE::Create-Fact ( quan q3 # s1w7 ) ( 8 ) )
        <ctx ID='ctx_175'>
          ( CLUE::Input ( = ( quan q3 # s2w9 ) 8 ) )
        </ctx>
      </ctx>
      <ctx ID='ctx_186'>
        ( CLUE::Bound-Facts ( u_map m1 # s1w7 # s1w4 ) ( verb m1 s1w2 ) )
        <ctx ID='ctx_109'>
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s1w4 ) ( / ( quan q1 # s1w4 ) ( quan q2 # s1w7 ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( u_map m1 # s1w7 # s1w4 ) ( / 2 1 ) ) )
          ( CLUE::Create-Fact ( u_map m1 # s1w7 # s1w4 ) ( 2 ) )
          <ctx ID='ctx_108'>
            ( CLUE::Rule ( => ( and ( q_map ?_1 ?_2 ?_3 ) ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ( = ( u_map ?_1 ?_6 ?_7 ?_4 ?_5 ) ( / ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ) ) )
            ( CLUE::Bind ( ?_1 m1 ) ( ?_2 q1 ) ( ?_3 q2 ) ( ?_4 # ) ( ?_5 s1w4 ) ( ?_6 # ) ( ?_7 s1w7 ) )
            ( CLUE::Premise ( q_map m1 q1 q2 ) ( quan q1 # s1w4 ) ( quan q2 # s1w7 ) )
            ( CLUE::Conclusion ( = ( u_map m1 # s1w7 # s1w4 ) ( / ( quan q1 # s1w4 ) ( quan q2 # s1w7 ) ) ) )
            ( CLUE::ExprVarMap ( $1_u_map ) ( $2_quan 2 ) ( $3_quan 1 ) )
            <ctx ID='ctx_105'>
              ( CLUE::Create-Fact ( q_map m1 q1 q2 ) ( ) )
              <ctx ID='ctx_103'>
                ( CLUE::Input ( q_map m1 q1 q2 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_88'>
              ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w4 ) 2 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w4 ) 2 ) )
              ( CLUE::Create-Fact ( quan q1 # s1w4 ) ( 2 ) )
              <ctx ID='ctx_87'>
                ( CLUE::Input ( = ( quan q1 # s1w4 ) 2 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_96'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w7 ) 1 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w7 ) 1 ) )
              ( CLUE::Create-Fact ( quan q2 # s1w7 ) ( 1 ) )
              <ctx ID='ctx_95'>
                ( CLUE::Input ( = ( quan q2 # s1w7 ) 1 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_88'>
            ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w4 ) 2 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q1 # s1w4 ) 2 ) )
            ( CLUE::Create-Fact ( quan q1 # s1w4 ) ( 2 ) )
            <ctx ID='ctx_87'>
              ( CLUE::Input ( = ( quan q1 # s1w4 ) 2 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_96'>
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w7 ) 1 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w7 ) 1 ) )
            ( CLUE::Create-Fact ( quan q2 # s1w7 ) ( 1 ) )
            <ctx ID='ctx_95'>
              ( CLUE::Input ( = ( quan q2 # s1w7 ) 1 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_112'>
          ( CLUE::Create-Fact ( verb m1 s1w2 ) ( ) )
          <ctx ID='ctx_110'>
            ( CLUE::Input ( verb m1 s1w2 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
