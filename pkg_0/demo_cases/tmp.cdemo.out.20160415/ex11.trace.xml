<Unit ID="IIS-MR-MATH-GRADE01-110506">
<Traces>
<Trace>
  <CHUNK_TREE>
    <chk ID='ctx_146'>
      <CHUNK>V.有</CHUNK>
      <CHUNK>UPSCOPE</CHUNK>
    </chk>
    <chk ID='ctx_150'>
      <CHUNK>BeginTree</CHUNK>
      <chk ID='ctx_150'>
        <CHUNK>15盒</CHUNK>
        <chk ID='ctx_150'>
          <CHUNK>OP_FloorDiv</CHUNK>
          <chk ID='ctx_150'>
            <CHUNK>75個甜甜圈</CHUNK>
            <CHUNK>UPSCOPE</CHUNK>
          </chk>
          <chk ID='ctx_150'>
            <CHUNK>5(個甜甜圈/盒)</CHUNK>
            <chk ID='ctx_89'>
              <CHUNK>OP_CommonDiv</CHUNK>
              <chk ID='ctx_89'>
                <CHUNK>10個甜甜圈</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              </chk>
              <chk ID='ctx_89'>
                <CHUNK>2盒</CHUNK>
                <CHUNK>UPSCOPE</CHUNK>
              </chk>
              <CHUNK>UPSCOPE</CHUNK>
            </chk>
            <CHUNK>UPSCOPE</CHUNK>
          </chk>
          <CHUNK>UPSCOPE</CHUNK>
        </chk>
        <CHUNK>UPSCOPE</CHUNK>
      </chk>
      <CHUNK>EndTree</CHUNK>
    </chk>
  </CHUNK_TREE>
  <ctx ID='ctx_147'>
    <__is_xml_mode_ASK__ANS>15</__is_xml_mode_ASK__ANS>
    <ctx ID='ctx_146'>
      ( CLUE::Input ( ASK ANS ( FloorDiv ( quan q3 s2w5 s2w6 ) ( Get ( u_map ?m s3w5 # s2w5 s2w6 ) ( COND ( verb ?m s1w3 ) ) ) ) ) )
    </ctx>
    <ctx ID='ctx_150'>
      ( CLUE::Util ( FloorDiv 75 5 = 15 ) )
      ( CLUE::Util ( Val1 ( m_real 75 ) ( m_fact ( quan q3 個 s1w6 ) ( 75 ) ) ) )
      ( CLUE::Util ( Val2 ( m_real 5 ) ( m_fact ( u_map m1 盒 # 個 s1w6 ) ( 5 ) ) ) )
      <ctx ID='ctx_119'>
        ( CLUE::EVAL::LF2 ( = ( quan q3 個 s1w6 ) 75 ) )
        ( CLUE::EVAL::LF2 ( = ( quan q3 個 s1w6 ) 75 ) )
        ( CLUE::Create-Fact ( quan q3 個 s1w6 ) ( 75 ) )
        <ctx ID='ctx_118'>
          ( CLUE::Input ( = ( quan q3 s2w5 s2w6 ) 75 ) )
        </ctx>
      </ctx>
      <ctx ID='ctx_149'>
        ( CLUE::Bound-Facts ( u_map m1 盒 # 個 s1w6 ) ( verb m1 s1w3 ) )
        <ctx ID='ctx_90'>
          ( CLUE::EVAL::LF2 ( = ( u_map m1 盒 # 個 s1w6 ) ( / ( quan q2 個 s1w6 ) ( quan q1 盒 # ) ) ) )
          ( CLUE::EVAL::LF2 ( = ( u_map m1 盒 # 個 s1w6 ) ( / 10 2 ) ) )
          ( CLUE::Create-Fact ( u_map m1 盒 # 個 s1w6 ) ( 5 ) )
          <ctx ID='ctx_89'>
            ( CLUE::Rule ( => ( and ( q_map ?_1 ?_2 ?_3 ) ( quan ?_2 ?_4 ?_5 ) ( quan ?_3 ?_6 ?_7 ) ) ( = ( u_map ?_1 ?_4 ?_5 ?_6 ?_7 ) ( / ( quan ?_3 ?_6 ?_7 ) ( quan ?_2 ?_4 ?_5 ) ) ) ) )
            ( CLUE::Bind ( ?_1 m1 ) ( ?_2 q1 ) ( ?_3 q2 ) ( ?_4 盒 ) ( ?_5 # ) ( ?_6 個 ) ( ?_7 s1w6 ) )
            ( CLUE::Premise ( q_map m1 q1 q2 ) ( quan q1 盒 # ) ( quan q2 個 s1w6 ) )
            ( CLUE::Conclusion ( = ( u_map m1 盒 # 個 s1w6 ) ( / ( quan q2 個 s1w6 ) ( quan q1 盒 # ) ) ) )
            ( CLUE::ExprVarMap ( $1 ) ( $2 10 ) ( $3 2 ) )
            <ctx ID='ctx_88'>
              ( CLUE::Create-Fact ( q_map m1 q1 q2 ) ( ) )
              <ctx ID='ctx_86'>
                ( CLUE::Input ( q_map m1 q1 q2 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_67'>
              ( CLUE::EVAL::LF2 ( = ( quan q1 盒 # ) 2 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q1 盒 # ) 2 ) )
              ( CLUE::Create-Fact ( quan q1 盒 # ) ( 2 ) )
              <ctx ID='ctx_66'>
                ( CLUE::Input ( = ( quan q1 s1w2 # ) 2 ) )
              </ctx>
            </ctx>
            <ctx ID='ctx_76'>
              ( CLUE::EVAL::LF2 ( = ( quan q2 個 s1w6 ) 10 ) )
              ( CLUE::EVAL::LF2 ( = ( quan q2 個 s1w6 ) 10 ) )
              ( CLUE::Create-Fact ( quan q2 個 s1w6 ) ( 10 ) )
              <ctx ID='ctx_75'>
                ( CLUE::Input ( = ( quan q2 s1w5 s1w6 ) 10 ) )
              </ctx>
            </ctx>
          </ctx>
          <ctx ID='ctx_76'>
            ( CLUE::EVAL::LF2 ( = ( quan q2 個 s1w6 ) 10 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q2 個 s1w6 ) 10 ) )
            ( CLUE::Create-Fact ( quan q2 個 s1w6 ) ( 10 ) )
            <ctx ID='ctx_75'>
              ( CLUE::Input ( = ( quan q2 s1w5 s1w6 ) 10 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_67'>
            ( CLUE::EVAL::LF2 ( = ( quan q1 盒 # ) 2 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q1 盒 # ) 2 ) )
            ( CLUE::Create-Fact ( quan q1 盒 # ) ( 2 ) )
            <ctx ID='ctx_66'>
              ( CLUE::Input ( = ( quan q1 s1w2 # ) 2 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_95'>
          ( CLUE::Create-Fact ( verb m1 s1w3 ) ( ) )
          <ctx ID='ctx_93'>
            ( CLUE::Input ( verb m1 s1w3 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
