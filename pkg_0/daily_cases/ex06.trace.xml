<Unit ID="IIS-MR-MATH-GRADEXX-XXXXXX">
<Traces>
<Trace>
  <CHUNK_TREE>
      <CHUNK>BeginTree</CHUNK>
        <CHUNK>4plum</CHUNK>
        <CHUNK>UPSCOPE</CHUNK>
      <CHUNK>EndTree</CHUNK>
  </CHUNK_TREE>
  <math ID='ctx_170'>
    4plum
  </math>
  <ctx ID='ctx_168'>
    <__one_line_xml_ASK__ANS>4</__one_line_xml_ASK__ANS>
    <ctx ID='ctx_167'>
      ( CLUE::Input ( ASK ANS ( tvq v1 # s3w3 t1 ) ) )
    </ctx>
    <ctx ID='ctx_170'>
      ( CLUE::AtomSeq ( tvq v1 # s1w4 t1 ) )
      ( CLUE::Util ( Get ( m_real 4 ) ) )
      ( CLUE::Util ( Val ( m_real 4 ) ( m_fact ( tvq v1 # s1w4 t1 ) ( 4 ) ) ) )
      <ctx ID='ctx_166'>
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t1 ) ( - ( tvq v1 # s1w4 t0 ) ( quan q6 # s1w4 ) ) ) )
        ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t1 ) ( - 7 3 ) ) )
        ( CLUE::Create-Fact ( tvq v1 # s1w4 t1 ) ( 4 ) )
        <ctx ID='ctx_165'>
          ( CLUE::Rule ( => ( and ( quan ?_1 ?_2 ?_3 ) ( tvq_op ?_4 - ?_1 ?_5 ?_6 ) ) ( = ( tvq ?_4 ?_2 ?_3 ?_6 ) ( - ( tvq ?_4 ?_2 ?_3 ?_5 ) ( quan ?_1 ?_2 ?_3 ) ) ) ) )
          ( CLUE::Bind ( ?_1 q6 ) ( ?_2 # ) ( ?_3 s1w4 ) ( ?_4 v1 ) ( ?_5 t0 ) ( ?_6 t1 ) )
          ( CLUE::Premise ( quan q6 # s1w4 ) ( tvq_op v1 - q6 t0 t1 ) )
          ( CLUE::Conclusion ( = ( tvq v1 # s1w4 t1 ) ( - ( tvq v1 # s1w4 t0 ) ( quan q6 # s1w4 ) ) ) )
          ( CLUE::ExprVarMap ( $1_tvq ) ( $2_tvq 7 ) ( $3_quan 3 ) )
          <ctx ID='ctx_125'>
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 3 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 3 ) )
            ( CLUE::Create-Fact ( quan q6 # s1w4 ) ( 3 ) )
            <ctx ID='ctx_124'>
              ( CLUE::Input ( = ( quan q6 # s2w4 ) 3 ) )
            </ctx>
          </ctx>
          <ctx ID='ctx_164'>
            ( CLUE::Create-Fact ( tvq_op v1 - q6 t0 t1 ) ( ) )
            <ctx ID='ctx_162'>
              ( CLUE::Input ( tvq_op v1 - q6 t0 t1 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_159'>
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t0 ) ( quan q2 # s1w4 ) ) )
          ( CLUE::EVAL::LF2 ( = ( tvq v1 # s1w4 t0 ) 7 ) )
          ( CLUE::Create-Fact ( tvq v1 # s1w4 t0 ) ( 7 ) )
          <ctx ID='ctx_158'>
            ( CLUE::Input ( = ( tvq v1 # s1w4 t0 ) ( quan q2 # s1w4 ) ) )
          </ctx>
          <ctx ID='ctx_85'>
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w4 ) 7 ) )
            ( CLUE::EVAL::LF2 ( = ( quan q2 # s1w4 ) 7 ) )
            ( CLUE::Create-Fact ( quan q2 # s1w4 ) ( 7 ) )
            <ctx ID='ctx_84'>
              ( CLUE::Input ( = ( quan q2 # s1w4 ) 7 ) )
            </ctx>
          </ctx>
        </ctx>
        <ctx ID='ctx_125'>
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 3 ) )
          ( CLUE::EVAL::LF2 ( = ( quan q6 # s1w4 ) 3 ) )
          ( CLUE::Create-Fact ( quan q6 # s1w4 ) ( 3 ) )
          <ctx ID='ctx_124'>
            ( CLUE::Input ( = ( quan q6 # s2w4 ) 3 ) )
          </ctx>
        </ctx>
      </ctx>
    </ctx>
  </ctx>
</Trace>
</Traces>
</Unit>
